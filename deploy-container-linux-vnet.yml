trigger: none

# We need to rely on a hosted agent from Microsoft to build and deploy our container agent for the first time.
# Please note that we'll be needing a Windows/Linux agent to match the corrosponding container image source. Otherwise the build will fail.
pool:
  vmImage: 'ubuntu-latest'

# Only change and fill in the parameters below:
variables:
  # URL to your Azure DevOps Organization and name of the agent pool. You'll need to create the agent pool yourself first.
  azdUrl: 'https://dev.azure.com/Stryker-HC/'
  agentPool: 'shcscr-cc-vpn-poc-agentpool'
  # Name of Key Vault where secrets are stored for the Azure Container Registry credentials and its proper URL.
  ServiceConnection: 'shcscr-cc-sp-ado'
  ResourceGroup: 'shcscr-cc-rg-vpn-poc'
  keyVaultName: 'shcscrccvpnpockv'
  # Name of the Azure Container Registry deployed in the previous pipeline.
  containerInstanceName: 'shcscracrvpnpoc'
  acrName: 'shcscracrvpnpoc-app1'
  containerRepository: 'ado-shc-scr-ubuntulinux' # changing this is optional

  # Provide the name of your vNet and subnet to which the Azure Container Instance and thus the container agent should be linked.
  # The subnet cannot contain any other resource types. Remove all existing resources from an existing subnet prior to 
  # deploying container groups to it, or create a new subnet. 
  # For additional details als limitations please see https://docs.microsoft.com/nl-nl/azure/container-instances/container-instances-vnet
  
  vnetName: ''
  subnetName: ''

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# =-=                                               DON't CHANGE ANYTHING BELOW THIS LINE!!                                                     =-=
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  registryUri: '$(acrName).azurecr.io'

steps:
# This taks will run a Powershell script to retrieve the credentials for ACR and PAT for Azure DevOps.
- task: AzureKeyVault@1
  displayName: 'Get secrets from Key Vault'
  inputs:
    azureSubscription: $(ServiceConnection)
    KeyVaultName: $(keyVaultName)
    SecretsFilter: 'RegistryPassword1, RegistryPassword2, patTokenManageAgent'

# This task will perform a Docker build and Docker push.
# The container image will be build the container image based on the 'containerRepository' value supplied above and pushes it towards ACR.
- task: PowerShell@2
  displayName: 'Build and Push Docker image'
  inputs:
    targetType: 'inline'
    script: |
      docker login $(acrName).azurecr.io --username $(acrName) --password $(RegistryPassword1) 
      docker build $(containerRepository) -t $(registryUri)/$(containerRepository):$(Build.BuildId)
      docker images
      docker push $(registryUri)/$(containerRepository):$(Build.BuildId)

# Lastly the Azure Container Instance will be deployed. All parameters are overriden except one!
# Since we don't want to insert and pass on the Azure Key Vault secrets in this task, you need to modify 
# the paramters JSON and correct the two Azure Key Vault references inside.
- task: AzureResourceGroupDeployment@2
  displayName: 'Deploy Container'
  inputs:
    azureSubscription: $(ServiceConnection)
    action: 'Create Or Update Resource Group'
    resourceGroupName: $(ResourceGroup)
    location: 'West Europe'
    templateLocation: 'Linked artifact'
    csmFile: 'adsha-ubuntulinux-vnetintegration/ACI_DevOps_Agent_VNet_template.json'
    csmParametersFile: 'adsha-ubuntulinux-vnetintegration/ACI_DevOps_Agent_VNet_parameters.json'
    overrideParameters: '-containerInstanceName $(containerInstanceName) -azdUrl $(azdUrl) -patToken $(patTokenManageAgent) -agentPool $(agentPool) -registryLoginServer $(registryUri) -registryImageUri $(registryUri)/$(containerRepository):$(Build.BuildId) -registryUserName $(acrName) -registryPassword $(RegistryPassword1) -vnetName $(vnetName) -subnetName $(subnetName)'
    deploymentMode: 'Incremental'

